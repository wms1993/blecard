apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        minSdkVersion 18
        ndk {
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64', "mips", "mips64"
        }
    }

    buildTypes {
        def logProguard = rootProject.ext.android.get('logProguard')
        release {
            minifyEnabled enable.toBoolean()
            if (logProguard != null && new File(logProguard).exists()) {
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', logProguard
            } else {
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }

        debug {
            minifyEnabled enable.toBoolean()
            if (logProguard != null && new File(logProguard).exists()) {
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', logProguard
            } else {
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api 'com.wms:ble:1.1.1-alpha7'
    implementation 'com.wms:logger:1.0.1'
    implementation 'com.proton.ecg.encrypt:encrypt:1.0.2'
}

if (enable.toBoolean()) {
    File file = new File('/Users/wangmengsi/Desktop/upload.gradle')
    if (file.exists()) {
        apply from: file.absolutePath
    }
}